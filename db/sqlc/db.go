// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"context"

	"github.com/jackc/pgx/v5"
	"github.com/jackc/pgx/v5/pgconn"
)

// DBTX represents an object capable of executing SQL queries.
type DBTX interface {
	// Executes a query that does not return rows e.g. INSERT or UPDATE
	Exec(context.Context, string, ...interface{}) (pgconn.CommandTag, error)
	// Executes a query that returns multiple rows e.g. SELECT
	Query(context.Context, string, ...interface{}) (pgx.Rows, error)
	// Executes a query that returns a single row
	QueryRow(context.Context, string, ...interface{}) pgx.Row
}

func New(db DBTX) *Queries {
	return &Queries{db: db}
}

type Queries struct {
	db DBTX
}

func (q *Queries) WithTx(tx pgx.Tx) *Queries {
	return &Queries{
		db: tx, // Use the transaction connection instead of regular DB connection
	}
}
